# Generated by Django 4.0.10 on 2024-10-29 22:32

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('API_CONNECTIONS', '0003_alter_history_table'),
    ]

    operations = [
        migrations.CreateModel(
            name='ALGO_BALANCE',
            fields=[
                ('DATE', models.DateField()),
                ('ALGO', models.TextField(primary_key=True, serialize=False)),
                ('BALANCE', models.FloatField()),
            ],
            options={
                'db_table': '___TRADER__ALGO_BALANCE___',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ALGO_LIST',
            fields=[
                ('algo_id', models.TextField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField()),
                ('attribute', models.TextField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': '___TRADER__ALGO_LIST___',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ALLOCATION',
            fields=[
                ('UUID', models.TextField(primary_key=True, serialize=False)),
                ('ALLOCATION_DATE', models.DateTimeField()),
                ('ALGO_CHOSEN', models.TextField()),
                ('VALUE', models.FloatField()),
            ],
            options={
                'db_table': '___TRADER__ALLOCATION___',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BACKTEST_DATA',
            fields=[
                ('DATE', models.DateField(primary_key=True, serialize=False)),
                ('OPEN', models.FloatField()),
                ('HIGH', models.FloatField()),
                ('LOW', models.FloatField()),
                ('CLOSE', models.FloatField()),
                ('DIRECTION', models.TextField()),
                ('SIGNAL', models.TextField()),
                ('COIN', models.TextField()),
                ('ALGO', models.TextField()),
            ],
            options={
                'db_table': '___TRADER__BACKTEST___',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='COMMITTMENT',
            fields=[
                ('VALUE', models.FloatField(primary_key=True, serialize=False)),
                ('CURRENCY', models.DateTimeField()),
                ('PAYER', models.TextField()),
                ('PAYER_ID', models.IntegerField()),
                ('RECIEVER', models.TextField()),
                ('RECIEVER_ID', models.IntegerField()),
                ('TRANS_TIME', models.IntegerField()),
                ('TRANS_ID', models.TextField()),
                ('TRANS_DATETIME', models.DateTimeField()),
                ('STATUS', models.FloatField()),
            ],
            options={
                'db_table': '___TRADER__COMMITMENT___',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PERSONAL_BALANCE',
            fields=[
                ('TRADE_DATE', models.DateField(primary_key=True, serialize=False)),
                ('USDT_VALUE', models.FloatField()),
            ],
            options={
                'db_table': '___TRADER__PERSONAL_ALGO___',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PERSONAL_TRADES',
            fields=[
                ('ORDERID', models.TextField(primary_key=True, serialize=False)),
                ('TRADE_DATE', models.DateTimeField()),
                ('SYMBOL', models.TextField()),
                ('SIDE', models.TextField()),
                ('COMMISSION_ASSET', models.TextField(db_column='COMMISSION ASSET')),
                ('COMMISSION', models.TextField()),
                ('PRICE', models.FloatField()),
                ('QTY', models.FloatField()),
                ('USDT_VALUE', models.FloatField()),
                ('REALIZED_PNL', models.FloatField(db_column='REALIZED PNL')),
            ],
            options={
                'db_table': '___TRADER__PERSONAL_TRADES___',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SAVED_TRADES',
            fields=[
                ('TIME', models.TextField(primary_key=True, serialize=False)),
                ('COIN', models.TextField()),
                ('LEVERAGE', models.FloatField()),
                ('TP', models.FloatField()),
                ('SL', models.FloatField()),
                ('PORTFOLIO_PERCENT', models.FloatField()),
                ('DIRECTION', models.TextField()),
                ('STATUS', models.TextField()),
            ],
            options={
                'db_table': '___TRADER__SAVED_TRADES___',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TRADE_HISTORY',
            fields=[
                ('ORDERID', models.TextField(primary_key=True, serialize=False)),
                ('TRADE_DATE', models.DateTimeField()),
                ('SYMBOL', models.TextField()),
                ('SIDE', models.TextField()),
                ('COMMISSION_ASSET', models.TextField(db_column='COMMISSION ASSET')),
                ('COMMISSION', models.TextField()),
                ('PRICE', models.FloatField()),
                ('QTY', models.FloatField()),
                ('USDT_VALUE', models.FloatField()),
                ('REALIZED_PNL', models.FloatField(db_column='REALIZED PNL')),
                ('ALGO', models.TextField()),
            ],
            options={
                'db_table': '___TRADER__TRADE_HISTORY_FILE___',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='USER_INFORMATION',
            fields=[
                ('USERNAME', models.TextField(primary_key=True, serialize=False)),
                ('PASSWORD', models.TextField()),
                ('UUID', models.TextField()),
                ('FIRST_NAME', models.TextField()),
                ('LAST_NAME', models.TextField()),
                ('ADDRESS', models.TextField()),
                ('CITY', models.TextField()),
                ('POSTCODE', models.TextField()),
                ('COUNTRY', models.TextField()),
                ('PHONE_NUMBER', models.TextField()),
                ('EMAIL_ADDRESS', models.TextField()),
                ('WALLET_ADDRESS', models.TextField()),
            ],
            options={
                'db_table': '___TRADER__USER_INFORMATION___',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='History',
        ),
    ]
